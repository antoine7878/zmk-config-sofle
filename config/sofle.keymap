/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE  &kp N1  &kp N2        &kp N3        &kp N4     &kp N5                          &kp N6     &kp N7     &kp N8         &kp N9         &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W         &kp E         &kp R      &kp T                           &kp Y      &kp U      &kp I          &kp O          &kp P     &kp ENTER
&kp ESC    &kp A   &kp S         &kp D         &kp F      &kp G                           &kp H      &kp J      &kp K          &kp L          &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X         &kp C         &kp V      &kp B      &trans       &trans  &kp N      &kp M      &kp COMMA      &kp DOT        &kp FSLH  &kp RSHFT
                   &kp LEFT_ALT  &kp LEFT_GUI  &kp LCTRL  &kp SPACE  &kp ENTER    &mo 1   &kp SPACE  &kp RCTRL  &kp RIGHT_GUI  &kp RIGHT_ALT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &kp F1           &kp F2    &kp F3    &kp F4    &kp F5                       &kp F6          &kp F7          &kp F8         &kp F9           &kp F10  &kp F11
&trans  &kp EXCLAMATION  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT                    &kp EQUAL       &kp PLUS        &trans         &trans           &trans   &kp F12
&trans  &kp CARET        &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR                     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &trans   &trans
&trans  &trans           &kp LBKT  &kp RBKT  &kp LBRC  &kp RBRC   &trans    &trans  &kp MINUS       &kp UNDER       &kp BACKSLASH  &kp PIPE         &trans   &trans
                         &trans    &trans    &trans    &trans     &trans    &trans  &trans          &trans          &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
